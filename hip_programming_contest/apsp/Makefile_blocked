# HIP Blocked Floyd-Warshall Makefile
# 用于编译分块Floyd-Warshall算法的HIP实现

# 编译器设置
HIPCC = hipcc
CXX = g++

# 编译选项
HIP_FLAGS = -O3 -std=c++17 -Wall -Wextra
CXX_FLAGS = -O3 -std=c++17 -Wall -Wextra

# 目标文件
TARGET_BLOCKED = apsp_blocked
TARGET_ORIGINAL = apsp

# 源文件
KERNEL_BLOCKED = kernel_blocked.hip
MAIN_BLOCKED = main_blocked.cpp
KERNEL_ORIGINAL = kernel.hip
MAIN_ORIGINAL = main.cpp

# 头文件
HEADERS = main.h blocked_floyd_warshall.h

# 默认目标
all: $(TARGET_BLOCKED) $(TARGET_ORIGINAL)

# 编译分块版本
$(TARGET_BLOCKED): $(KERNEL_BLOCKED) $(MAIN_BLOCKED) $(HEADERS)
	$(HIPCC) $(HIP_FLAGS) -o $(TARGET_BLOCKED) $(KERNEL_BLOCKED) $(MAIN_BLOCKED)

# 编译原始版本
$(TARGET_ORIGINAL): $(KERNEL_ORIGINAL) $(MAIN_ORIGINAL) $(HEADERS)
	$(HIPCC) $(HIP_FLAGS) -o $(TARGET_ORIGINAL) $(KERNEL_ORIGINAL) $(MAIN_ORIGINAL)

# 清理
clean:
	rm -f $(TARGET_BLOCKED) $(TARGET_ORIGINAL)

# 测试分块版本
test_blocked: $(TARGET_BLOCKED)
	@echo "Testing blocked Floyd-Warshall implementation..."
	@for i in testcases/*.in; do \
		echo "Testing $$i"; \
		./$(TARGET_BLOCKED) $$i > /tmp/blocked_output_$$(basename $$i .in).out; \
	done

# 测试原始版本
test_original: $(TARGET_ORIGINAL)
	@echo "Testing original Floyd-Warshall implementation..."
	@for i in testcases/*.in; do \
		echo "Testing $$i"; \
		./$(TARGET_ORIGINAL) $$i > /tmp/original_output_$$(basename $$i .in).out; \
	done

# 对比测试
compare: test_blocked test_original
	@echo "Comparing results..."
	@for i in testcases/*.in; do \
		basename=$$(basename $$i .in); \
		echo "Comparing $$basename:"; \
		if diff /tmp/blocked_output_$$basename.out /tmp/original_output_$$basename.out > /dev/null; then \
			echo "  ✓ Results match"; \
		else \
			echo "  ✗ Results differ"; \
			diff /tmp/blocked_output_$$basename.out /tmp/original_output_$$basename.out; \
		fi; \
	done

# 性能测试
benchmark: $(TARGET_BLOCKED) $(TARGET_ORIGINAL)
	@echo "Running performance comparison..."
	@for i in testcases/*.in; do \
		basename=$$(basename $$i .in); \
		echo "Benchmarking $$basename:"; \
		echo "  Blocked version:"; \
		time ./$(TARGET_BLOCKED) $$i > /dev/null; \
		echo "  Original version:"; \
		time ./$(TARGET_ORIGINAL) $$i > /dev/null; \
		echo ""; \
	done

# 帮助
help:
	@echo "Available targets:"
	@echo "  all          - Build both blocked and original versions"
	@echo "  $(TARGET_BLOCKED)   - Build blocked Floyd-Warshall version"
	@echo "  $(TARGET_ORIGINAL)  - Build original Floyd-Warshall version"
	@echo "  test_blocked - Test blocked version"
	@echo "  test_original- Test original version"
	@echo "  compare      - Compare results between versions"
	@echo "  benchmark    - Run performance comparison"
	@echo "  clean        - Remove built executables"
	@echo "  help         - Show this help message"

.PHONY: all clean test_blocked test_original compare benchmark help
